/* All of the below styles build incrementally on the base Windows styles found in ui-light.css. */

/* Cool bg */
body
{
    background-image: radial-gradient(circle farthest-corner at right top, #9AD5E8 0%, #4BAACB 30%, #06416B 80%);
    color: white;
}

/* label color */
label
{
    color: white;    
}


/*title color */

#styleTitle
{
    color: rgb(0,255,255) !important;
}


/*-----------------------------------------------------------------------------  
    checkbox  
-----------------------------------------------------------------------------*/


/* Colors the checkmark*/
input[type="checkbox"]::-ms-check
{
    color: rgb(112,243,255);
}

/*-----------------------------------------------------------------------------  
    input range  
-----------------------------------------------------------------------------*/

/* Gives the range element a background. */
input[type="range"]::-ms-fill-lower
{
    background-color: rgb(6,178,180);
}

/* Hides the upper fill part so its colors don't compete with our intended look. */
input[type="range"]::-ms-fill-upper
{
    display: none;
}

/* Range element hover. */
input[type="range"]:hover::-ms-fill-lower
{
    background-color: rgb(0,255,255);
}

/*-----------------------------------------------------------------------------  
    text box  
-----------------------------------------------------------------------------*/

/* Gives us a black bg on textbox */
input[type=text]
{
    background-color: rgba(0,0,0,.4);
    border: 1px solid rgba(0,0,0,0.6);
    color: rgb(0,255,255);
}

input[type=text]:hover
{
    background-color: rgba(0,0,0,.6);
    border: 1px solid rgba(0,0,0,0.6);
    color: rgb(0,255,255);
}

input[type=text]:active, input[type=text]:focus 
{
    background-color: rgba(0,0,0,.4);
    border: 1px solid rgb(0,255,255);
    color: rgb(0,255,255);
}

/*-----------------------------------------------------------------------------  
    button  
-----------------------------------------------------------------------------*/

/* Colors the buttons */
input[type="button"], input[type="reset"]
{
    background-color: rgb(6,178,180);
    border: 2px solid rgb(6,178,180);
    color: rgb(255,255,255);
}

input[type="button"]:hover, input[type="reset"]:hover
{
    background-color: rgb(0,255,255);
    border: 2px solid rgb(0,255,255);
    color: rgb(255,255,255);
}

input[type="submit"]
{
    background-color: rgb(6,178,180);
    border: 2px solid rgb(255,255,255);
    color: rgb(255,255,255);
}


input[type="submit"]:hover
{
    background-color: rgb(0,255,255);
    border: 2px solid rgb(255,255,255);
    color: rgb(255,255,255);
}

/*-----------------------------------------------------------------------------  
    radio button  
-----------------------------------------------------------------------------*/

/* Colors the radio buttons. Note that the structure of both radio buttons and 
   checkboxes is that there is both an outer box for the element as well as an inner box,
   which can be addressed with the ::-ms-check pseudo-element. The inner box has 
   a built in glyph - a circle or a check mark - that is displayed when the control 
   is checked. This glyph's appearance is changed by changing the color of the 
   ::-ms-check pseudo-element, while the background appearance of the inner box is 
   changed by changing the background-color of the pseudo-element. For the purposes 
   of this sample, the outer box is completely transparent and unstyled. */
input[type="radio"]::-ms-check
{
    background-color: rgba(0,0,0,.4);
    border: 2px solid rgba(0,0,0,0.4);
    color: rgb(6,178,180);
}

/* Changes the appearance of the checkmark and the inner box border when any part 
   of the control is hovered over. Note that if the selector below were written 
   ::-ms-check:hover instead, the CSS rules would only be active when the
   inner box was hovered over.*/
input[type="radio"]:hover::-ms-check
{
    background-color: rgba(0,0,0,.6);
    border: 2px solid rgba(0,0,0,0.6);
    color: rgb(0,255,255);
}


/*-----------------------------------------------------------------------------  
    checkbox  
-----------------------------------------------------------------------------*/

/* Colors the checkboxes, and uses the file customCheckmark.svg to create a custom
   checkmark that appears to go outside the bounds of the outer box. This effect 
   is created by offsetting the background image by 10px vertically. */
input[type="checkbox"]
{
    width: 20px;
    height: 30px;
    background-image: url('../images/checkmarkBackground.svg');
    background-repeat: no-repeat;
    background-color: transparent;
    background-position: 0px 10px;
}

/* Swaps the background image of the outer box on hover so the checkbox appears
   darker. */
input[type="checkbox"]:hover
{
    background-image: url('../images/checkmarkBackgroundHover.svg');
}

input[type="checkbox"]:hover::-ms-check, 
input[type="checkbox"]:hover:active::-ms-check
{
    background-color: transparent;
    border: none;
}

/* Here the checkmark is hidden by giving it a transparent color so that the custom
   checkmark, which is applied as a background image, can be seen. */
input[type="checkbox"]::-ms-check
{
    background-color: transparent;
    background-repeat: no-repeat;
    color: transparent;
    border: none;
    width: 20px;
    height: 30px;
}

/* Apply the custom checkmark image. */
input[type="checkbox"]:checked::-ms-check
{
    background-image: url('../images/customCheckmark.svg');
}


/*-----------------------------------------------------------------------------  
    input range  
-----------------------------------------------------------------------------*/

/* Colors the range control */

input[type="range"]::-ms-track, input[type="range"]:hover::-ms-track
{
    background-color: rgba(0,0,0,.4);
}

/* Range thumb. */
input[type="range"]::-ms-thumb
{
    background-color: rgb(255,255,255);
}

